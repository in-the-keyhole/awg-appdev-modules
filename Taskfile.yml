version: '3'

vars:
  DISTDIR: ./dist
  VERSION: 0.0.386
  XPKGS: [ 'awg-appdev' ]
  CHARTS: [ 'awg-appdev-boot', 'awg-appdev-init', 'awg-appdev-conf' ]
  REPOSITORY: awgappdevlabs.azurecr.io

tasks:

  # logs into the ACR repository
  login-acr:
    cmds:
    - az acr login -n {{ .REPOSITORY }}

  test-xpkg-example:
    requires:
      vars:
        - XPKG
        - API
        - EXAMPLE
    cmds:
    - cmd: crossplane render xpkg/{{ .XPKG }}/examples/apis/{{ .API }}/examples/{{ .EXAMPLE }}.yaml xpkg/{{ .XPKG }}/apis/{{ .API }}/composition.yaml xpkg/{{ .XPKG }}/examples/functions.yaml --extra-resources xpkg/{{ .XPKG }}/examples/{{.API }}/example --context-files="apiextensions.crossplane.io/environment"=xpkg/{{ .XPKG }}/examples/environment/awg-appdev.json --include-full-xr --include-context

  test-xpkg-api:
    requires:
      vars:
        - XPKG
        - API
    vars:
      EXAMPLES:
        sh: find xpkg/{{ .XPKG }}/examples/apis/{{ .API }} -name *.yaml -printf "%h\n" | cut -d'/' -f6-
    deps:
    - for: { var: EXAMPLES }
      task: test-xpkg-example
      vars:
        XPKG: '{{ .XPKG }}'
        API: '{{ .API }}'
        EXAMPLE: '{{ .ITEM }}'

  test-xpkg:
    requires:
      vars:
      - XPKG
    vars:
      APIS:
        sh: find xpkg/{{ .XPKG }}/apis -name definition.yaml -printf "%h\n" | cut -d'/' -f4-
    deps:
    - for: { var: APIS }
      task: test-xpkg-api
      vars:
        XPKG: '{{ .XPKG }}'
        API: '{{ .ITEM }}'

  test-xpkgs:
    deps:
    - for: { var: XPKGS }
      task: test-xpkg
      vars:
        XPKG: '{{ .ITEM }}'

  # reusable task which builds a Crossplane package by name given by the XPKG variable
  build-xpkg:
    requires:
      vars:
        - XPKG
        - VERSION
    sources:
     - 'xpkg/{{ .XPKG }}/apis/crossplane.yaml'
    generates:
      - '{{ .DISTDIR }}/{{ .XPKG }}-{{ .VERSION }}.xpkg'
    preconditions:
      - test -f 'xpkg/{{ .XPKG }}/apis/crossplane.yaml'
    cmds:
      - mkdir -p {{ .DISTDIR }}
      - crossplane xpkg build -o {{ .DISTDIR }}/{{ .XPKG }}-{{ .VERSION }}.xpkg -f xpkg/{{ .XPKG }}/apis

  # builds all the xpkgs
  build-xpkgs:
    deps:
      - for: { var: XPKGS }
        task: build-xpkg
        vars:
          XPKG: '{{ .ITEM }}'

  # reusable task which publishes a Crossplane package by name given by the XPKG variable
  publish-xpkg:
    run: when_changed
    deps:
      - task: login-acr
      - task: build-xpkg
        vars:
          XPKG: '{{ .XPKG }}'
    requires:
      vars:
        - XPKG
        - VERSION
    cmds:
      - crossplane xpkg push '{{ .REPOSITORY }}/xpkgs/{{ .XPKG }}:{{ .VERSION }}' -f '{{ .DISTDIR }}/{{ .XPKG }}-{{ .VERSION }}.xpkg'

  # publishes all the xpkgs
  publish-xpkgs:
    deps:
      - for: { var: XPKGS }
        task: publish-xpkg
        vars:
          XPKG: '{{ .ITEM }}'
  
  # reusable task which builds a Helm chart by a name given by the CHART variable
  build-chart:
    run: when_changed
    requires:
      vars:
        - CHART
        - VERSION
    sources:
      - charts/{{ .CHART }}/**/*/yaml
    generates:
      - '{{ .DISTDIR }}/{{ .CHART }}-{{ .VERSION }}.tgz'
    preconditions:
      - test -f 'charts/{{ .CHART }}/Chart.yaml'
    cmds:
      - mkdir -p {{ .DISTDIR }}
      - helm package charts/{{ .CHART }} -d {{ .DISTDIR }} --app-version {{ .VERSION }} --version {{ .VERSION }}

  # builds all the charts
  build-charts:
    deps:
      - task: login-acr
      - for: { var: CHARTS }
        task: build-chart
        vars:
          CHART: '{{ .ITEM }}'
  
  # reusable task which publishes a Helm chart by a name given by the CHART variable
  publish-chart:
    run: when_changed
    deps:
      - task: build-chart
        vars:
          CHART: '{{ .CHART }}'
    requires:
      vars:
        - CHART
        - VERSION
    cmds:
      - helm push '{{ .DISTDIR }}/{{ .CHART }}-{{ .VERSION }}.tgz' 'oci://{{ .REPOSITORY }}/charts'

  # publishes all the charts
  publish-charts:
    deps:
      - for: { var: CHARTS }
        task: publish-chart
        vars:
          CHART: '{{ .ITEM }}'

  build:
    deps:
      - build-xpkgs
      - build-charts

  publish:
    deps:
      - publish-xpkgs
      - publish-charts

  default:
    deps:
      - build
  