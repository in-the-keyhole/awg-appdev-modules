apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: vaults.keyvault.azure.appdev.awginc.com
  labels:
    crossplane.io/xrd: xvaults.keyvault.azure.appdev.awginc.com
spec:
  compositeTypeRef:
    apiVersion: keyvault.azure.appdev.awginc.com/v1alpha1
    kind: XVault
  writeConnectionSecretsToNamespace: crossplane-system
  mode: Pipeline
  pipeline:
  - step: env
    functionRef:
      name: crossplane-contrib-function-environment-configs
    input:
      apiVersion: environmentconfigs.fn.crossplane.io/v1beta1
      kind: Input
      spec:
        environmentConfigs:
          - type: Reference
            ref:
              name: awg-appdev
  - step: render
    functionRef:
      name: crossplane-contrib-function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          ---
          {{- $environment := .context | dig "apiextensions.crossplane.io/environment" "" }}
          {{- if not $environment }}
          {{- fail "Could not load environment config." }}
          {{- end }}
          {{- $defaultName := $environment.defaultName | trim }}
          ---

          {{- $xr := getCompositeResource . }}
          {{- $namespace := $xr.spec.claimRef.namespace }}
          {{- $name := $xr.spec.claimRef.name }}
          {{- $appRef := $xr.spec.applicationRef.name }}
          {{- $hash := printf "%s-%s" $namespace $name | sha1sum | substr 0 5 }}
          ---

          apiVersion: meta.gotemplating.fn.crossplane.io/v1alpha1
          kind: ExtraResources
          requirements:
            application:
              apiVersion: appdev.awginc.com/v1alpha1
              kind: XApplication
              matchLabels:
                crossplane.io/claim-namespace: {{ $namespace }}
                crossplane.io/claim-name: {{ $appRef }}
          ---

          {{- if .extraResources }}
          {{- $appXR := .extraResources | dig "application" "items" list | first | default dict | dig "resource" dict }}
          {{- if not $appXR }}
          {{- fail (printf "Could not find Application: %s/%s" $namespace $appRef) }}
          {{- end }}
          ---

          {{- $resourceName := printf "%s-app-%s-%s" $defaultName $appXR.spec.name $hash }}
          ---

          {{- $vaultName := $resourceName }}
          {{- if gt (len $vaultName) 24 }}
          {{- $vaultName = printf "%s-%s" (substr 0 ((sub 24 6) | int) $vaultName | trimSuffix "-") (sha1sum $vaultName | substr 0 5) }}
          {{- end }}
          apiVersion: keyvault.azure.upbound.io/v1beta2
          kind: Vault
          metadata:
            annotations:
              {{ setResourceNameAnnotation "vault" }}
              crossplane.io/external-name: {{ $vaultName }}
            labels:
              application.appdev.awginc.com/namespace: {{ $namespace }}
              application.appdev.awginc.com/name: {{ $appRef }}
          spec:
            deletionPolicy: Delete
            forProvider:
              tags:
                application.appdev.awginc.com-namespace: {{ $namespace }}
                application.appdev.awginc.com-name: {{ $appRef }}
                vault.keyvault.azure.appdev.awginc.com-name: {{ $xr.metadata.name }}
              resourceGroupNameSelector:
                matchLabels:
                  application.appdev.awginc.com/namespace: {{ $namespace }}
                  application.appdev.awginc.com/name: {{ $appRef }}
              location: {{ $xr.spec.location | default $appXR.spec.defaultResourceLocation }}
              skuName: "standard"
              enableRbacAuthorization: true
              purgeProtectionEnabled: true
              tenantId: {{ $environment.azure.tenantId }}
          ---

          apiVersion: keyvault.azure.appdev.awginc.com/v1alpha1
          kind: XVault
          status:
            applicationRef:
              namespace: {{ $namespace }}
              name: {{ $appRef }}
          ---

          {{- $vault := getComposedResource . "vault" }}
          {{- if dig "status" "atProvider" "id" "" $vault }}
          ---

          apiVersion: keyvault.azure.appdev.awginc.com/v1alpha1
          kind: XVault
          status:
            azure:
              resources:
                keyVault:
                  {{- with $vault.status.atProvider.id }}
                  id: {{ . }}
                  {{- end }}
                  {{- with $vault.metadata.annotations | dig "crossplane.io/external-name" "" }}
                  name: {{ . }}
                  {{- end }}
                  {{- with $vault.status.atProvider.location }}
                  location: {{ . }}
                  {{- end }}
                  {{- with $vault.status.atProvider.managedBy }}
                  managedBy: {{ . }}
                  {{- end }}
                  {{- with $vault.status.atProvider.vaultUri }}
                  managedBy: {{ . }}
                  {{- end }}
          ---

          apiVersion: meta.gotemplating.fn.crossplane.io/v1alpha1
          kind: CompositeConnectionDetails
          data:
          {{- $vaultConnectionDetails := .observed.resources.vault.connectionDetails }}
            {{- if $vaultConnectionDetails }}
            uri: {{ $vault.status.atProvider.vaultUri }}
            {{- end }}
          ---
          
          {{- end }}
          {{- end }}
          ---
  - step: ready
    functionRef:
      name: crossplane-contrib-function-auto-ready
