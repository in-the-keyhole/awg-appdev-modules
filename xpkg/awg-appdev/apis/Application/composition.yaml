apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: applications.appdev.awginc.com
  labels:
    crossplane.io/xrd: xapplications.appdev.awginc.com
spec:
  compositeTypeRef:
    apiVersion: appdev.awginc.com/v1alpha1
    kind: XApplication
  mode: Pipeline
  pipeline:
  - step: env
    functionRef:
      name: crossplane-contrib-function-environment-configs
    input:
      apiVersion: environmentconfigs.fn.crossplane.io/v1beta1
      kind: Input
      spec:
        environmentConfigs:
          - type: Reference
            ref:
              name: awg-appdev
  - step: render
    functionRef:
      name: crossplane-contrib-function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          ---
          {{- $environment := .context | dig "apiextensions.crossplane.io/environment" "" }}
          {{- if not $environment }}
          {{- fail "Could not load environment config." }}
          {{- end }}
          {{- $defaultName := $environment.defaultName | trim }}
          ---

          {{- $xr := getCompositeResource . }}
          {{- $namespace := $xr.spec.claimRef.namespace }}
          {{- $name := $xr.spec.claimRef.name }}
          {{- $appName := $xr.spec.name }}
          {{- $hash := printf "%s-%s" $namespace $name | sha1sum | substr 0 5 }}
          {{- $resourcePrefix := printf "%s-app-%s" $defaultName $appName }}
          ---

          apiVersion: azure.upbound.io/v1beta1
          kind: ResourceGroup
          metadata:
            annotations:
              {{ setResourceNameAnnotation "resourceGroup" }}
              crossplane.io/external-name: rg-{{ $resourcePrefix }}
            labels:
              application.appdev.awginc.com/namespace: {{ $namespace }}
              application.appdev.awginc.com/name: {{ $name }}
          spec:
            deletionPolicy: Delete
            forProvider:
              tags:
                application.appdev.awginc.com-namespace: {{ $namespace }}
                application.appdev.awginc.com-name: {{ $name }}
              location: {{ $xr.spec.metadataLocation }}
          ---

          {{- $resourceGroup := getComposedResource . "resourceGroup" }}
          {{- if $resourceGroup | dig "status" "atProvider" "id" "" }}
          ---

          apiVersion: appdev.awginc.com/v1alpha1
          kind: XApplication
          status:
            azure:
              resources:
                resourceGroup:
                  {{- with $resourceGroup.status.atProvider.id }}
                  id: {{ . }}
                  {{- end }}
                  {{- with $resourceGroup.metadata.annotations | dig "crossplane.io/external-name" "" }}
                  name: {{ . }}
                  {{- end }}
                  {{- with $resourceGroup.status.atProvider.location }}
                  location: {{ . }}
                  {{- end }}
                  {{- with $resourceGroup.status.atProvider.managedBy }}
                  managedBy: {{ . }}
                  {{- end }}
          ---

          apiVersion: managedidentity.azure.upbound.io/v1beta1
          kind: UserAssignedIdentity
          metadata:
            annotations:
              {{ setResourceNameAnnotation "identity" }}
            labels:
              application.appdev.awginc.com/namespace: {{ $namespace }}
              application.appdev.awginc.com/name: {{ $name }}
          spec:
            deletionPolicy: Delete
            forProvider:
              name: {{ $resourcePrefix }}
              tags:
                application.appdev.awginc.com-namespace: {{ $namespace }}
                application.appdev.awginc.com-name: {{ $name }}
              resourceGroupNameSelector:
                matchControllerRef: true
              location: {{ $xr.spec.defaultResourceLocation }}
          ---

          {{- $zoneName := printf "%s.%s" $appName ($environment.dnsZoneName | trim) }}
          apiVersion: network.azure.upbound.io/v1beta2
          kind: DNSZone
          metadata:
            annotations:
              {{ setResourceNameAnnotation "dnsZone" }}
              crossplane.io/external-name: {{ $zoneName }}
            labels:
              application.appdev.awginc.com/namespace: {{ $namespace }}
              application.appdev.awginc.com/name: {{ $name }}
          spec:
            deletionPolicy: Delete
            forProvider:
              tags:
                application.appdev.awginc.com-namespace: {{ $namespace }}
                application.appdev.awginc.com-name: {{ $name }}
              resourceGroupNameSelector:
                matchControllerRef: true
          ---

          {{- $dnsZone := getComposedResource . "dnsZone" }}
          {{- if $dnsZone | dig "status" "atProvider" "id" "" }}
          apiVersion: appdev.awginc.com/v1alpha1
          kind: XApplication
          status:
            azure:
              resources:
                dnsZone:
                  {{- with $dnsZone.status.atProvider.id }}
                  id: {{ . }}
                  {{- end }}
                  {{- with $dnsZone | dig "metadata" "annotations" "crossplane.io/external-name" "" }}
                  name: {{ . }}
                  {{- end }}
                  {{- with $dnsZone.status.atProvider.location }}
                  location: {{ . }}
                  {{- end }}
                  {{- with $dnsZone.status.atProvider.managedBy }}
                  managedBy: {{ . }}
                  {{- end }}
          ---
          {{- end }}

          {{- $internalZoneName := printf "%s.%s" $appName ($environment.internalDnsZoneName | trim) }}
          apiVersion: network.azure.upbound.io/v1beta2
          kind: PrivateDNSZone
          metadata:
            annotations:
              {{ setResourceNameAnnotation "internalDnsZone" }}
              crossplane.io/external-name: {{ $internalZoneName }}
            labels:
              application.appdev.awginc.com/namespace: {{ $namespace }}
              application.appdev.awginc.com/name: {{ $name }}
          spec:
            deletionPolicy: Delete
            forProvider:
              tags:
                application.appdev.awginc.com-namespace: {{ $namespace }}
                application.appdev.awginc.com-name: {{ $name }}
              resourceGroupNameSelector:
                matchControllerRef: true
          ---

          {{- $internalDnsZone := getComposedResource . "internalDnsZone" }}
          {{- if $internalDnsZone | dig "status" "atProvider" "id" "" }}
          ---

          apiVersion: appdev.awginc.com/v1alpha1
          kind: XApplication
          status:
            azure:
              resources:
                internalDnsZone:
                  {{- with $internalDnsZone.status.atProvider.id }}
                  id: {{ . }}
                  {{- end }}
                  {{- with $internalDnsZone.metadata.annotations | dig "crossplane.io/external-name" "" }}
                  name: {{ . }}
                  {{- end }}
                  {{- with $internalDnsZone.status.atProvider.location }}
                  location: {{ . }}
                  {{- end }}
                  {{- with $internalDnsZone.status.atProvider.managedBy }}
                  managedBy: {{ . }}
                  {{- end }}
          ---
          {{- end }}

          apiVersion: network.azure.upbound.io/v1beta1
          kind: PrivateDNSZoneVirtualNetworkLink
          metadata:
            annotations:
              {{ setResourceNameAnnotation "internalDnsZoneLink" }}
            labels:
              application.appdev.awginc.com/namespace: {{ $namespace }}
              application.appdev.awginc.com/name: {{ $name }}
          spec:
            deletionPolicy: Delete
            forProvider:
              tags:
                application.appdev.awginc.com-namespace: {{ $namespace }}
                application.appdev.awginc.com-name: {{ $name }}
              resourceGroupNameSelector:
                matchControllerRef: true
              privateDnsZoneNameSelector:
                matchControllerRef: true
              virtualNetworkId: {{ $environment.azure.vnetId | trim }}
          ---

          {{- $identity := getComposedResource . "identity" }}
          {{- if $identity | dig "status" "atProvider" "id" "" }}
          ---

          apiVersion: appdev.awginc.com/v1alpha1
          kind: XApplication
          status:
            azure:
              resources:
                userAssignedIdentity:
                  {{- with $identity.status.atProvider.id }}
                  id: {{ . }}
                  {{- end }}
                  {{- with $identity.metadata.annotations | dig "crossplane.io/external-name" "" }}
                  name: {{ . }}
                  {{- end }}
                  {{- with $identity.status.atProvider.location }}
                  location: {{ . }}
                  {{- end }}
                  {{- with $identity.status.atProvider.managedBy }}
                  managedBy: {{ . }}
                  {{- end }}
          ---

          apiVersion: authorization.azure.upbound.io/v1beta1
          kind: RoleAssignment
          metadata:
            annotations:
              {{ setResourceNameAnnotation "identity-role-dns-zone-contributor" }}
            labels:
              application.appdev.awginc.com/namespace: {{ $namespace }}
              application.appdev.awginc.com/name: {{ $name }}
          spec:
            deletionPolicy: Delete
            forProvider:
              roleDefinitionName: DNS Zone Contributor
              scope: {{ $resourceGroup.status.atProvider.id }}
              principalId: {{ $identity.status.atProvider.principalId }}
          ---

          apiVersion: authorization.azure.upbound.io/v1beta1
          kind: RoleAssignment
          metadata:
            annotations:
              {{ setResourceNameAnnotation "identity-role-private-dns-zone-contributor" }}
            labels:
              application.appdev.awginc.com/namespace: {{ $namespace }}
              application.appdev.awginc.com/name: {{ $name }}
          spec:
            deletionPolicy: Delete
            forProvider:
              roleDefinitionName: Private DNS Zone Contributor
              scope: {{ $resourceGroup.status.atProvider.id }}
              principalId: {{ $identity.status.atProvider.principalId }}
          ---

          apiVersion: managedidentity.azure.upbound.io/v1beta1
          kind: FederatedIdentityCredential
          metadata:
            annotations:
              {{ setResourceNameAnnotation "identity-external-dns-external" }}
            labels:
              application.appdev.awginc.com/namespace: {{ $namespace }}
              application.appdev.awginc.com/name: {{ $name }}
          spec:
            deletionPolicy: Delete
            forProvider:
              resourceGroupNameSelector:
                matchControllerRef: true
              parentIdSelector:
                matchControllerRef: true
                matchLabels:
                  crossplane.io/composition-resource-name: identity
              issuer: {{ $environment.cluster.oidc_issuer_url | trim }}
              audience:
              - api://AzureADTokenExchange
              subject: {{ printf "system:serviceaccount:%s:%s-external-dns-external" $namespace $name }}
          ---

          apiVersion: managedidentity.azure.upbound.io/v1beta1
          kind: FederatedIdentityCredential
          metadata:
            annotations:
              {{ setResourceNameAnnotation "identity-external-dns-internal" }}
            labels:
              application.appdev.awginc.com/namespace: {{ $namespace }}
              application.appdev.awginc.com/name: {{ $name }}
          spec:
            deletionPolicy: Delete
            forProvider:
              resourceGroupNameSelector:
                matchControllerRef: true
              parentIdSelector:
                matchControllerRef: true
                matchLabels:
                  crossplane.io/composition-resource-name: identity
              issuer: {{ $environment.cluster.oidc_issuer_url | trim }}
              audience:
              - api://AzureADTokenExchange
              subject: {{ printf "system:serviceaccount:%s:%s-external-dns-internal" $namespace $name }}
          ---

          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata:
            annotations:
              {{ setResourceNameAnnotation "external-dns-cluster-role" }}
            labels:
              application.appdev.awginc.com/namespace: {{ $namespace }}
              application.appdev.awginc.com/name: {{ $name }}
          spec:
            managementPolicies:
            - Observe
            - Create
            - Update
            - Delete
            forProvider:
              manifest:
                apiVersion: rbac.authorization.k8s.io/v1
                kind: ClusterRole
                rules:
                - apiGroups: [""]
                  resources: ["namespaces"]
                  verbs: ["get","watch","list"]
                - apiGroups: [""]
                  resources: ["nodes"]
                  verbs: ["get","watch","list"]
                - apiGroups: ["gateway.networking.k8s.io"]
                  resources: ["gateways"]
                  verbs: ["get","watch","list"]
                - apiGroups: ["gateway.networking.k8s.io"]
                  resources: ["httproutes"]
                  verbs: ["get","watch","list"]
                - apiGroups: ["gateway.networking.k8s.io"]
                  resources: ["grpcroutes"]
                  verbs: ["get","watch","list"]
                - apiGroups: ["gateway.networking.k8s.io"]
                  resources: ["tlsroutes"]
                  verbs: ["get","watch","list"]
                - apiGroups: ["gateway.networking.k8s.io"]
                  resources: ["tcproutes"]
                  verbs: ["get","watch","list"]
                - apiGroups: ["gateway.networking.k8s.io"]
                  resources: ["udproutes"]
                  verbs: ["get","watch","list"]
                - apiGroups: ["networking.istio.io"]
                  resources: ["gateways"]
                  verbs: ["get","watch","list"]
                - apiGroups: ["networking.istio.io"]
                  resources: ["virtualservices"]
                  verbs: ["get","watch","list"]
          ---

          apiVersion: helm.crossplane.io/v1beta1
          kind: Release
          metadata:
            annotations:
              {{ setResourceNameAnnotation "external-dns-external" }}
              crossplane.io/external-name: {{ $xr.metadata.name }}-external-dns-external
            labels:
              application.appdev.awginc.com/namespace: {{ $namespace }}
              application.appdev.awginc.com/name: {{ $name }}
          spec:
            managementPolicies:
            - Observe
            - Create
            - Update
            - Delete
            forProvider:
              namespace: {{ $namespace }}
              chart:
                repository: https://kubernetes-sigs.github.io/external-dns/
                name: external-dns
                version: 1.16.1
              values:
                logLevel: debug
                txtOwnerId: {{ $appName }}
                namespaced: true
                sources:
                - service
                - ingress
                - gateway-httproute
                - istio-gateway
                - istio-virtualservice
                domainFilters:
                - {{ $zoneName }}
                provider:
                  name: azure
                serviceAccount:
                  annotations:
                    azure.workload.identity/client-id: {{ $identity.status.atProvider.clientId }}
                podLabels:
                  azure.workload.identity/use: "true"
                secretConfiguration:
                  enabled: true
                  mountPath: /etc/kubernetes/
                  data:
                    azure.json: |
                      {
                        "tenantId": "{{ $identity.status.atProvider.tenantId }}",
                        "subscriptionId": "{{ index (splitList "/" $resourceGroup.status.atProvider.id) 2 }}",
                        "resourceGroup": "{{ $resourceGroup.metadata.annotations | dig "crossplane.io/external-name" "" }}",
                        "useWorkloadIdentityExtension": true
                      }
          ---

          {{- $externalDnsClusterRole := getComposedResource . "external-dns-cluster-role" }}
          {{- if $externalDnsClusterRole }}
          {{- $externalDnsExternal := getComposedResource . "external-dns-external" }}
          {{- if $externalDnsExternal | dig "metadata" "annotations" "crossplane.io/external-name" "" }}  
          ---

          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata:
            annotations:
              {{ setResourceNameAnnotation "external-dns-external-cluster-role-binding" }}
            labels:
              application.appdev.awginc.com/namespace: {{ $namespace }}
              application.appdev.awginc.com/name: {{ $name }}
          spec:
            managementPolicies:
            - Observe
            - Create
            - Update
            - Delete
            forProvider:
              manifest:
                apiVersion: rbac.authorization.k8s.io/v1
                kind: ClusterRoleBinding
                roleRef:
                  apiGroup: rbac.authorization.k8s.io
                  kind: ClusterRole
                  name: {{ $externalDnsClusterRole.metadata.annotations | dig "crossplane.io/external-name" "" }}
                subjects:
                - kind: ServiceAccount
                  namespace: {{ $namespace }}
                  name: {{ $externalDnsExternal.metadata.annotations | dig "crossplane.io/external-name" "" }}
          ---

          {{- end }}
          {{- end }}
          ---

          apiVersion: helm.crossplane.io/v1beta1
          kind: Release
          metadata:
            annotations:
              {{ setResourceNameAnnotation "external-dns-internal" }}
              crossplane.io/external-name: {{ $xr.metadata.name }}-external-dns-internal
            labels:
              application.appdev.awginc.com/namespace: {{ $namespace }}
              application.appdev.awginc.com/name: {{ $name }}
          spec:
            managementPolicies:
            - Observe
            - Create
            - Update
            - Delete
            forProvider:
              namespace: {{ $namespace }}
              chart:
                repository: https://kubernetes-sigs.github.io/external-dns/
                name: external-dns
                version: 1.16.1
              values:
                logLevel: debug
                txtOwnerId: {{ $appName }}
                namespaced: true
                sources:
                - service
                - ingress
                - gateway-httproute
                - istio-gateway
                - istio-virtualservice
                domainFilters:
                - {{ $internalZoneName }}
                provider:
                  name: azure-private-dns
                serviceAccount:
                  annotations:
                    azure.workload.identity/client-id: {{ $identity.status.atProvider.clientId }}
                podLabels:
                  azure.workload.identity/use: "true"
                secretConfiguration:
                  enabled: true
                  mountPath: /etc/kubernetes/
                  data:
                    azure.json: |
                      {
                        "tenantId": "{{ $identity.status.atProvider.tenantId }}",
                        "subscriptionId": "{{ index (splitList "/" $resourceGroup.status.atProvider.id) 2 }}",
                        "resourceGroup": "{{ $resourceGroup.metadata.annotations | dig "crossplane.io/external-name" "" }}",
                        "useWorkloadIdentityExtension": true
                      }
          ---

          {{- if $externalDnsClusterRole }}
          {{- $externalDnsInternal := getComposedResource . "external-dns-internal" }}
          {{- if $externalDnsInternal | dig "metadata" "annotations" "crossplane.io/external-name" "" }}
          ---

          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata:
            annotations:
              {{ setResourceNameAnnotation "external-dns-internal-cluster-role-binding" }}
            labels:
              application.appdev.awginc.com/namespace: {{ $namespace }}
              application.appdev.awginc.com/name: {{ $name }}
          spec:
            managementPolicies:
            - Observe
            - Create
            - Update
            - Delete
            forProvider:
              manifest:
                apiVersion: rbac.authorization.k8s.io/v1
                kind: ClusterRoleBinding
                labels:
                  application.appdev.awginc.com/namespace: {{ $namespace }}
                  application.appdev.awginc.com/name: {{ $name }}
                roleRef:
                  apiGroup: rbac.authorization.k8s.io
                  kind: ClusterRole
                  name: {{ $externalDnsClusterRole.metadata.annotations | dig "crossplane.io/external-name" "" }}
                subjects:
                - kind: ServiceAccount
                  namespace: {{ $namespace }}
                  name: {{ $externalDnsInternal.metadata.annotations | dig "crossplane.io/external-name" "" }}
          ---

          {{- end }}
          {{- end }}
          ---

          {{- end }}
          {{- end }}
          ---
  - step: ready
    functionRef:
      name: crossplane-contrib-function-auto-ready
